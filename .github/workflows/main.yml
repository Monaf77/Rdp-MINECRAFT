name: RDP

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 3600

    steps:
      - name: Configure Core RDP Settings
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "SecurityLayer" -Value 0 -Force
          netsh advfirewall firewall delete rule name="RDP-Tailscale" | Out-Null
          netsh advfirewall firewall add rule name="RDP-Tailscale" dir=in action=allow protocol=TCP localport=3389 | Out-Null
          Restart-Service -Name TermService -Force

      - name: Create RDP User with Static Password
        run: |
          $password = "admin@123"
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force

          if (Get-LocalUser -Name "TOOLBOXLAP" -ErrorAction SilentlyContinue) {
              Remove-LocalUser -Name "TOOLBOXLAP" -Confirm:$false
          }

          New-LocalUser -Name "TOOLBOXLAP" -Password $securePass -AccountNeverExpires
          Add-LocalGroupMember -Group "Administrators" -Member "TOOLBOXLAP"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "TOOLBOXLAP"
          Enable-LocalUser -Name "TOOLBOXLAP"

          echo "RDP_CREDS=User: TOOLBOXLAP | Password: $password" >> $env:GITHUB_ENV

      - name: Install Tailscale
        run: |
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-latest-amd64.msi"
          $installerPath = "$env:TEMP\tailscale.msi"

          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath -UseBasicParsing
          $process = Start-Process "msiexec.exe" -ArgumentList "/i `"$installerPath`" /quiet /norestart" -Wait -PassThru -NoNewWindow
          
          if ($process.ExitCode -ne 0) {
              Write-Error "Installation failed with exit code: $($process.ExitCode)"
              exit 1
          }
          
          Remove-Item $installerPath -Force -ErrorAction SilentlyContinue

      - name: Establish Tailscale Connection
        run: |
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-runner-$env:GITHUB_RUN_ID --reset
          $tsIP = $null
          $retries = 0
          $maxRetries = 10
          
          while (-not $tsIP -and $retries -lt $maxRetries) {
              $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
              if (-not $tsIP) { $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -6 }
              if (-not $tsIP) {
                  $retries++
                  Start-Sleep -Seconds 5
              }
          }
          
          if (-not $tsIP) {
              Write-Error "Tailscale IP not assigned after $maxRetries attempts"
              exit 1
          }
          
          echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV
          Write-Host "Tailscale IP: $tsIP"

      - name: Verify RDP Accessibility
        run: |
          $tsIP = $env:TAILSCALE_IP
          Write-Host "Verifying RDP access to $tsIP..."
          
          $testResult = Test-NetConnection -ComputerName $tsIP -Port 3389 -WarningAction SilentlyContinue
          if ($testResult.TcpTestSucceeded) {
              Write-Host "✅ RDP is accessible at $tsIP" -ForegroundColor Green
          } else {
              Write-Error "❌ RDP connection test failed"
              exit 1
          }

      - name: Maintain Connection
        run: |
          $tsIP = $env:TAILSCALE_IP
          Write-Host "`n=== RDP ACCESS INFORMATION ==="
          Write-Host "Address: $tsIP"
          Write-Host "Username: TOOLBOXLAP"
          Write-Host "Password: admin@123"
          Write-Host "============================"
          
          while ($true) {
              $connectionTest = Test-NetConnection -ComputerName $tsIP -Port 3389 -WarningAction SilentlyContinue
              $status = if ($connectionTest.TcpTestSucceeded) { "✅ Active" } else { "❌ Disconnected" }
              Write-Host "[$(Get-Date -Format 'HH:mm:ss')] RDP $status - $tsIP"
              Start-Sleep -Seconds 30
          }
