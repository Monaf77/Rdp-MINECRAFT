name: RDP Web Interface

on:
  workflow_dispatch:
    inputs:
      runtime_minutes:
        description: 'Session Duration (minutes)'
        required: true
        default: '60'
      password:
        description: 'RDP Password'
        required: true
        default: 'P@ssw0rd123!'

jobs:
  setup-rdp:
    runs-on: windows-latest
    timeout-minutes: 360
    
    steps:
    - name: Configure RDP
      shell: powershell
      run: |
        # Enable RDP
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0 -Force
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "SecurityLayer" -Value 0 -Force
        
        # Configure firewall
        netsh advfirewall firewall delete rule name="RDP" | Out-Null
        netsh advfirewall firewall add rule name="RDP" dir=in action=allow protocol=TCP localport=3389 | Out-Null
        Set-NetFirewallRule -DisplayGroup "Remote Desktop" -Enabled True -Profile Any
        Restart-Service TermService -Force

    - name: Create RDP User
      shell: powershell
      run: |
        $password = "${{ github.event.inputs.password || 'P@ssw0rd123!' }}"
        $securePass = ConvertTo-SecureString $password -AsPlainText -Force

        # Create or update user
        if (Get-LocalUser -Name "RDPUser" -ErrorAction SilentlyContinue) {
            Remove-LocalUser -Name "RDPUser" -Confirm:$false
        }

        New-LocalUser -Name "RDPUser" -Password $securePass -AccountNeverExpires
        Add-LocalGroupMember -Group "Administrators" -Member "RDPUser"
        Add-LocalGroupMember -Group "Remote Desktop Users" -Member "RDPUser"
        Enable-LocalUser -Name "RDPUser"

        # Store credentials
        $creds = @{
            username = "RDPUser"
            password = $password
            expiry = (Get-Date).AddMinutes(60).ToString("yyyy-MM-dd HH:mm:ss")
        }
        $creds | ConvertTo-Json | Out-File "rdp_creds.json"

    - name: Get Public IP
      id: ip
      uses: haythem/public-ip@v4
      with:
        ip_version: "v4"

    - name: Start Web Interface
      uses: actions/upload-artifact@v3
      with:
        name: rdp-info
        path: rdp_creds.json
      if: always()

    - name: Display Connection Info
      run: |
        echo "RDP Connection Information:"
        echo "IP: ${{ steps.ip.outputs.ipv4 }}"
        echo "Username: RDPUser"
        echo "Password: ${{ github.event.inputs.password || 'P@ssw0rd123!' }}"
        echo "Port: 3389"
        echo "Session will expire in ${{ github.event.inputs.runtime_minutes || 60 }} minutes"

    - name: Wait for session
      run: |
        $minutes = ${{ github.event.inputs.runtime_minutes || 60 }}
        Start-Sleep -Seconds ($minutes * 60)
