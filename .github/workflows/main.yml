name: RDP Web Interface
 
on:
  workflow_dispatch:
    inputs:
      runtime_minutes:
        description: 'Session Duration (minutes)'
        required: true
        default: '60'
      password:
        description: 'RDP Password'
        required: true
        default: 'P@ssw0rd123!'

jobs:
  setup-rdp:
    runs-on: windows-latest
    timeout-minutes: 360
    
    steps:
    - name: Configure RDP
      shell: powershell
      run: |
        # Enable RDP
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0 -Force
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "SecurityLayer" -Value 0 -Force
        
        # Configure firewall
        netsh advfirewall firewall delete rule name="RDP" | Out-Null
        netsh advfirewall firewall add rule name="RDP" dir=in action=allow protocol=TCP localport=3389 | Out-Null
        Set-NetFirewallRule -DisplayGroup "Remote Desktop" -Enabled True -Profile Any
        Restart-Service TermService -Force

    - name: Create RDP User
      shell: powershell
      run: |
        $password = "${{ github.event.inputs.password || 'P@ssw0rd123!' }}"
        $securePass = ConvertTo-SecureString $password -AsPlainText -Force

        # Create or update user
        if (Get-LocalUser -Name "RDPUser" -ErrorAction SilentlyContinue) {
            Remove-LocalUser -Name "RDPUser" -Confirm:$false
        }

        New-LocalUser -Name "RDPUser" -Password $securePass -AccountNeverExpires
        Add-LocalGroupMember -Group "Administrators" -Member "RDPUser"
        Add-LocalGroupMember -Group "Remote Desktop Users" -Member "RDPUser"
        Enable-LocalUser -Name "RDPUser"

    - name: Get Public IP
      id: get-ip
      shell: powershell
      run: |
        # Get public IP using a different method
        $ip = (Invoke-RestMethod -Uri "https://api.ipify.org?format=json").ip
        echo "ip=$ip" >> $env:GITHUB_OUTPUT

    - name: Display Connection Info
      shell: powershell
      run: |
        $ip = "${{ steps.get-ip.outputs.ip }}"
        $password = "${{ github.event.inputs.password || 'P@ssw0rd123!' }}"
        
        Write-Host "=============================================="
        Write-Host "RDP Connection Information:"
        Write-Host "IP: $ip"
        Write-Host "Username: RDPUser"
        Write-Host "Password: $password"
        Write-Host "Port: 3389"
        Write-Host "Session will expire in ${{ github.event.inputs.runtime_minutes || 60 }} minutes"
        Write-Host "=============================================="
        
        # Create RDP file
        $rdpContent = @"
screen mode id:i:2
use multimon:i:0
desktopwidth:i:1280
desktopheight:i:800
session bpp:i:32
winposstr:s:0,1,0,0,800,600
compression:i:1
keyboardhook:i:2
audiocapturemode:i:0
videoplaybackmode:i:1
connection type:i:7
networkautodetect:i:1
bandwidthautodetect:i:1
displayconnectionbar:i:1
enableworkspacereconnect:i:0
disable wallpaper:i:0
allow font smoothing:i:1
allow desktop composition:i:0
disable full window drag:i:1
disable menu anims:i:1
disable themes:i:0
disable cursor setting:i:0
bitmapcachepersistenable:i:1
full address:s:$ip
audiomode:i:0
redirectprinters:i:1
redirectcomports:i:0
redirectsmartcards:i:1
redirectclipboard:i:1
redirectposdevices:i:0
autoreconnection enabled:i:1
authentication level:i:2
prompt for credentials:i:0
negotiate security layer:i:1
remoteapplicationmode:i:0
alternate shell:s:
shell working directory:s:
gatewayhostname:s:
gatewayusagemethod:i:4
gatewaycredentialssource:i:4
gatewayprofileusagemethod:i:0
promptcredentialonce:i:0
use redirection server name:i:0
"@

        # Save RDP file
        $rdpContent | Out-File -FilePath "connection.rdp" -Encoding ASCII
        
        # Output download link
        $repo = "${{ github.repository }}"
        $runId = "${{ github.run_id }}"
        $downloadUrl = "https://github.com/$repo/actions/runs/$runId/artifacts"
        Write-Host "Download RDP file: $downloadUrl"

    - name: Upload RDP File
      uses: actions/upload-artifact@v4
      with:
        name: rdp-connection
        path: connection.rdp
        retention-days: 1

    - name: Wait for session
      shell: powershell
      run: |
        $minutes = ${{ github.event.inputs.runtime_minutes || 60 }}
        Write-Host "RDP session will be available for $minutes minutes"
        Start-Sleep -Seconds ($minutes * 60)
        Write-Host "RDP session has ended"
